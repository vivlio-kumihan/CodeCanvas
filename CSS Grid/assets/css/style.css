a {

}

/* 幅、高さが一定の比率で可変サイズをさせる。 */
/* 『grid-auto-rows』で横幅を決めて */
/* 中の要素、この場合は、『a』の高さを100％とすることで */
/* 実現できる。 */
.grid-container {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-auto-rows: 20vw;
  gap: 20px;
  padding: 20px;
}
@media screen and (max-width: 768px) {
  .grid-container {
    grid-template-columns: 1fr;
    grid-auto-rows: 50vw;
  }
}

.grid-container li a {
  position: relative;

  display: block;
  height: 100%;
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  color: #fff;
  overflow: hidden;
  border-radius: 10px;
  box-shadow: 0 0 15px rgba(0, 0, 0, .7);
  transition: .3s;
}

.grid-container li a:hover {
  opacity: .5;
}

.grid-container li:nth-of-type(1) {
  grid-row: span 2;
  grid-column: span 2;
}
@media screen and (max-width: 768px) {
  .grid-container li:nth-of-type(1) {
    grid-row: auto;
    grid-column: auto;
  }
}
.grid-container li:nth-of-type(1) a {
  background-image: url(../img/img-01.jpg);
}
.grid-container li:nth-of-type(2) a {
  background-image: url(../img/img-02.jpg);
}
.grid-container li:nth-of-type(3) a {
  background-image: url(../img/img-03.jpg);
}
.grid-container li:nth-of-type(4) a {
  background-image: url(../img/img-04.jpg);
}
.grid-container li:nth-of-type(5) a {
  background-image: url(../img/img-05.jpg);
}
.grid-container li:nth-of-type(6) a {
  background-image: url(../img/img-06.jpg);
}

/* テキストのレイアウト
幅100％でリフローしたら『…』で略す。 */
.grid-container li a p {
  position: absolute;
  left: 0;
  bottom: 0;
  width: 100%;
  padding: 20px;
  font-size: 15px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}